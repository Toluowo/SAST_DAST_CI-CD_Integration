name: SAST-DAST-CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sast-dast-sonar:
    runs-on: ubuntu-latest

    services:
      web:
        image: ghcr.io/toluowo/sast-dast-ci-cd-integration:latest
        ports:
          - 8080:8080
        options: >-
          --health-cmd="curl --fail http://localhost:8080 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Unshallow the Git clone (for SonarCloud blame info)
        run: git fetch --unshallow || true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Log in to GHCR (GitHub Container Registry)
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set permissions on report files
        run: |
          touch report_json.json report_md.md report_html.html zap_report.html
          chmod a+w report_json.json report_md.md report_html.html zap_report.html

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run ZAP Baseline Scan (DAST)
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run -v ${{ github.workspace }}:/zap/wrk/:rw \
            --network=host \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://localhost:8080 \
            -J report_json.json -w report_md.md -r report_html.html -a -g zap_report.html

      - name: Upload ZAP Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            report_json.json
            report_md.md
            report_html.html
            zap_report.html

      - name: Notify Slack (optional)
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: github-actions
          SLACK_ICON_EMOJI: ':shield:'
          SLACK_COLOR: '#36a64f'
          SLACK_MESSAGE: "âœ… SAST + DAST + SonarCloud analysis passed on `${{ github.ref_name }}`"

