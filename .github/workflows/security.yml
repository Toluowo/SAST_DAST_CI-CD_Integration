name: SAST & DAST CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sast-and-dast:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GHCR
      run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u toluowo --password-stdin

    - name: Pull image
      run: docker pull ghcr.io/toluowo/sast-dast-ci-cd-integration:latest
  
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # SAST - SonarCloud scan
    - name: Run SonarQube Scan (SonarCloud)
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.host.url=https://sonarcloud.io

    # Build Docker image for vulnerable app
    - name: Build Docker image
      run: docker build -t vulnerable-app .

    - name: Run vulnerable app container
      run: |
        docker run -d -p 8080:8080 --name test-app vulnerable-app
        sleep 10  # give the app time to start

    # ZAP Baseline Scan
    - name: Pre-create zap_report.html
      run: |
       touch zap_report.html
       chmod a+w zap_report.html

    - name: Run OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.12.0
      with:
        target: http://localhost:8080
        cmd_options: '-a -g zap_report.html'
      continue-on-error: true

    - name: Upload ZAP HTML Report
      uses: actions/upload-artifact@v4
      with:
        name: zap-report
        path: zap_report.html

    # Send Slack notification (if webhook secret exists)
    - name: Notify Slack
      if: success() || failure()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

