name: SAST and DAST CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  sast_dast:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # üîç SAST - SonarCloud
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5
      with:
        projectBaseDir: .
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
        SONAR_PROJECT_KEY: sast-dast-project_sast-dast-ci-cd-integration
        SONAR_ORGANIZATION: sast-dast-project

    # üõ† Build Docker Image Locally
    - name: Build Docker image
      run: docker build -t vuln-web-app .

    # üß™ DAST - Run OWASP ZAP
    - name: Run OWASP ZAP baseline scan
      uses: zaproxy/action-baseline@v0.12.0
      with:
        target: http://host.docker.internal:8080
        docker_name: 'vuln-web-app'
        cmd_options: '-a'
      continue-on-error: true

    # üì§ Upload ZAP report
    - name: Upload ZAP Report
      uses: actions/upload-artifact@v4
      with:
        name: zap-report
        path: zap.out

    # üîî Slack Notification
    - name: Notify Slack
      if: always()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "SAST & DAST scan completed for `${{ github.repository }}`. Check results in artifacts and SonarCloud."
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

	
