name: Security CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sast-sonarcloud:
    name: SAST - SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dast-zap:
    name: DAST - OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: sast-sonarcloud

    services:
      web:
        image: ghcr.io/toluowo/sast-dast-ci-cd-integration:latest
        ports:
          - 8080:8080
        options: >-
          --health-cmd="curl --fail http://localhost:8080 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for App to Start
        run: sleep 30

      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run -v $(pwd):/zap/wrk:rw -t owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:8080 \
            -g gen.conf \
            -r zap_report.html || true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html

      - name: Notify Slack
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text": "*Security Pipeline Complete*:\n• SAST (SonarCloud): ✅\n• DAST (OWASP ZAP): ✅\nArtifact: zap_report.html",
            "username": "CI/CD Security Bot"
          }' ${{ secrets.SLACK_WEBHOOK }}
