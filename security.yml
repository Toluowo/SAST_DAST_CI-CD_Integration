name: Security CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sast-sonarcloud:
    name: SAST - SonarCloud
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        organization: ${{ secrets.SONAR_ORGANIZATION }}
        token: ${{ secrets.SONAR_TOKEN }}

  build-and-zap:
    name: DAST - OWASP ZAP
    runs-on: ubuntu-latest
    needs: sast-sonarcloud
    services:
      web:
        image: your-app-image:latest
        ports:
          - 8080:8080
        options: >-
          --health-cmd="curl --fail http://localhost:8080 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Wait for App to Start
      run: sleep 30

    - name: Run OWASP ZAP Baseline Scan
      run: |
        docker run -v $(pwd):/zap/wrk:rw -t owasp/zap2docker-stable zap-baseline.py \
          -t http://localhost:8080 \
          -g gen.conf \
          -r zap_report.html || true

    - name: Archive OWASP ZAP Report
      uses: actions/upload-artifact@v3
      with:
        name: zap-report
        path: zap_report.html

    - name: Notify Slack
      if: always()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "text": "*Security Pipeline Complete*\n• SonarCloud SAST: Done\n• ZAP DAST: Done\nCheck artifacts for detailed report.",
          "username": "CI/CD Security Bot"
        }' ${{ secrets.SLACK_WEBHOOK }}

